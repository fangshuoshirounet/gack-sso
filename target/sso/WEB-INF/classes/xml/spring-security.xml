<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/security/oauth2  http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
		<constructor-arg index="0" ref="dataSource"></constructor-arg>
	</bean>
	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="clientDetailsService" ref="gackClientDetailsService" />
	</bean>
	<bean id="clinetAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />
	<bean id="accessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
	<bean id="userApprovalHandler"
		class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler" />

	<!-- 客户端认证管理器开始 -->
	<bean id="gackClientDetailsService"
		class="org.springframework.security.oauth2.provider.client.JdbcClientDetailsService">
		<constructor-arg index="0" ref="dataSource"></constructor-arg>
	</bean>

	<!-- <oauth2:client-details-service id="gackClientDetailsService"> -->
	<!-- <oauth2:client client-id="mobile_1" -->
	<!-- authorized-grant-types="password,authorization_code,refresh_token,implicit" -->
	<!-- secret="secret_1" scope="read,write,trust" /> -->
	<!-- </oauth2:client-details-service> -->
	<bean id="clientDetailsUserDetailsService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="gackClientDetailsService" />
	</bean>
	<security:authentication-manager id="clientAuthenticationManager">
		<security:authentication-provider
			user-service-ref="clientDetailsUserDetailsService" />
	</security:authentication-manager>
	<!-- 客户端认证管理器结束 -->

	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>
	
	<bean id="userCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>

	<bean id="authorizationCodeServices"
		class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
		<constructor-arg index="0" ref="dataSource" />
	</bean>
	<oauth2:authorization-server
		client-details-service-ref="gackClientDetailsService"
		token-services-ref="tokenServices">
		<oauth2:authorization-code
			authorization-code-services-ref="authorizationCodeServices" />
		<oauth2:refresh-token />
		<oauth2:password />
	</oauth2:authorization-server>

	<security:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="clientAuthenticationManager"
		use-expressions="false">
		<security:intercept-url pattern="/oauth/token"
			access="IS_AUTHENTICATED_FULLY" />
		<security:anonymous enabled="false" />
		<security:http-basic entry-point-ref="clinetAuthenticationEntryPoint" />
		<security:custom-filter ref="clientCredentialsTokenEndpointFilter"
			before="BASIC_AUTH_FILTER" />
		<security:access-denied-handler ref="accessDeniedHandler" />
		<security:csrf disabled="true" />
	</security:http>
	<!--client -->
	<!--user -->
	<bean id="userService" class="citic.gack.web.sso.oauth2.GackUserDetailsService" />
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="userService">
			<security:password-encoder hash="md5" />
		</security:authentication-provider>
	</security:authentication-manager>
	<!--user -->

	<oauth2:resource-server id="mobileResourceServer"
		resource-id="mobile-resource" token-services-ref="tokenServices" />
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>
	<security:http pattern="/users/**" create-session="never"
		entry-point-ref="clinetAuthenticationEntryPoint"
		access-decision-manager-ref="accessDecisionManager" use-expressions="false">
		<security:anonymous enabled="false" />
		<security:intercept-url pattern="/users/**"
			access="ROLE_USER" />
		<security:custom-filter ref="mobileResourceServer"
			before="PRE_AUTH_FILTER" />
		<security:access-denied-handler ref="accessDeniedHandler" />
		<security:csrf disabled="true" />
	</security:http>
</beans>